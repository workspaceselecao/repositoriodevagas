-- Script para criar tabela de not√≠cias
-- Execute no Supabase SQL Editor

-- Tabela de not√≠cias
CREATE TABLE IF NOT EXISTS noticias (
  id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
  titulo VARCHAR(255) NOT NULL,
  conteudo TEXT NOT NULL,
  tipo VARCHAR(20) CHECK (tipo IN ('info', 'alerta', 'anuncio')) NOT NULL,
  ativa BOOLEAN DEFAULT true,
  prioridade VARCHAR(10) CHECK (prioridade IN ('baixa', 'media', 'alta')) DEFAULT 'media',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  created_by UUID REFERENCES users(id)
);

-- √çndices para melhor performance
CREATE INDEX IF NOT EXISTS idx_noticias_tipo ON noticias(tipo);
CREATE INDEX IF NOT EXISTS idx_noticias_ativa ON noticias(ativa);
CREATE INDEX IF NOT EXISTS idx_noticias_prioridade ON noticias(prioridade);
CREATE INDEX IF NOT EXISTS idx_noticias_created_at ON noticias(created_at);
CREATE INDEX IF NOT EXISTS idx_noticias_created_by ON noticias(created_by);

-- Trigger para atualizar updated_at automaticamente
DO $$
BEGIN
    IF NOT EXISTS (
        SELECT 1 FROM pg_trigger 
        WHERE tgname = 'update_noticias_updated_at' 
        AND tgrelid = 'noticias'::regclass
    ) THEN
        CREATE TRIGGER update_noticias_updated_at BEFORE UPDATE ON noticias
            FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
    END IF;
END $$;

-- RLS (Row Level Security) para proteger os dados
ALTER TABLE noticias ENABLE ROW LEVEL SECURITY;

-- Pol√≠ticas RLS para noticias
DO $$
BEGIN
    -- Pol√≠tica para leitura: todos os usu√°rios autenticados podem ler not√≠cias
    IF NOT EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'noticias' 
        AND policyname = 'Usu√°rios podem ler not√≠cias'
    ) THEN
        CREATE POLICY "Usu√°rios podem ler not√≠cias" ON noticias
          FOR SELECT USING (auth.role() = 'authenticated');
    END IF;

    -- Pol√≠tica para inser√ß√£o: apenas admins podem criar not√≠cias
    IF NOT EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'noticias' 
        AND policyname = 'Apenas admins podem criar not√≠cias'
    ) THEN
        CREATE POLICY "Apenas admins podem criar not√≠cias" ON noticias
          FOR INSERT WITH CHECK (
            auth.uid() IN (
              SELECT id FROM users WHERE role = 'ADMIN'
            )
          );
    END IF;

    -- Pol√≠tica para atualiza√ß√£o: apenas admins podem atualizar not√≠cias
    IF NOT EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'noticias' 
        AND policyname = 'Apenas admins podem atualizar not√≠cias'
    ) THEN
        CREATE POLICY "Apenas admins podem atualizar not√≠cias" ON noticias
          FOR UPDATE USING (
            auth.uid() IN (
              SELECT id FROM users WHERE role = 'ADMIN'
            )
          );
    END IF;

    -- Pol√≠tica para exclus√£o: apenas admins podem excluir not√≠cias
    IF NOT EXISTS (
        SELECT 1 FROM pg_policies 
        WHERE tablename = 'noticias' 
        AND policyname = 'Apenas admins podem excluir not√≠cias'
    ) THEN
        CREATE POLICY "Apenas admins podem excluir not√≠cias" ON noticias
          FOR DELETE USING (
            auth.uid() IN (
              SELECT id FROM users WHERE role = 'ADMIN'
            )
          );
    END IF;
END $$;

-- Inserir algumas not√≠cias de exemplo
INSERT INTO noticias (titulo, conteudo, tipo, prioridade, created_by) VALUES
(
  'üéâ Bem-vindos ao Sistema de Reposit√≥rio de Vagas!',
  'Este √© o novo sistema para gerenciamento de vagas de emprego. Aqui voc√™ pode criar, editar e acompanhar todas as oportunidades dispon√≠veis.',
  'info',
  'alta',
  (SELECT id FROM users WHERE role = 'ADMIN' LIMIT 1)
),
(
  '‚ö†Ô∏è Importante: Atualiza√ß√£o do Sistema',
  'Em breve teremos uma nova vers√£o do sistema com melhorias significativas. Fiquem atentos √†s not√≠cias!',
  'alerta',
  'media',
  (SELECT id FROM users WHERE role = 'ADMIN' LIMIT 1)
),
(
  'üì¢ Novo: Sistema de Not√≠cias',
  'Agora voc√™s podem visualizar not√≠cias, avisos e an√∫ncios diretamente no dashboard principal.',
  'anuncio',
  'media',
  (SELECT id FROM users WHERE role = 'ADMIN' LIMIT 1)
)
ON CONFLICT DO NOTHING;

SELECT 'Tabela de not√≠cias criada com sucesso!' as status;
