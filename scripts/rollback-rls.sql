-- Script de rollback para desabilitar RLS em caso de problemas
-- Execute este script se as pol√≠ticas RLS estiverem causando problemas

-- ========================================
-- ROLLBACK COMPLETO - DESABILITAR RLS
-- ========================================

-- 1. Remover todas as pol√≠ticas existentes
DROP POLICY IF EXISTS "users_select_policy" ON users;
DROP POLICY IF EXISTS "users_insert_policy" ON users;
DROP POLICY IF EXISTS "users_update_policy" ON users;
DROP POLICY IF EXISTS "users_delete_policy" ON users;
DROP POLICY IF EXISTS "vagas_select_policy" ON vagas;
DROP POLICY IF EXISTS "vagas_insert_policy" ON vagas;
DROP POLICY IF EXISTS "vagas_update_policy" ON vagas;
DROP POLICY IF EXISTS "vagas_delete_policy" ON vagas;
DROP POLICY IF EXISTS "backup_logs_all_policy" ON backup_logs;

-- 2. Remover fun√ß√µes auxiliares
DROP FUNCTION IF EXISTS get_current_user_role();
DROP FUNCTION IF EXISTS is_admin();
DROP FUNCTION IF EXISTS is_rh_or_admin();

-- 3. Desabilitar RLS completamente
ALTER TABLE users DISABLE ROW LEVEL SECURITY;
ALTER TABLE vagas DISABLE ROW LEVEL SECURITY;
ALTER TABLE backup_logs DISABLE ROW LEVEL SECURITY;

-- 4. Verificar se o rollback foi bem-sucedido
SELECT 
  'rollback_status' as info,
  tablename,
  rowsecurity as rls_enabled,
  CASE 
    WHEN rowsecurity = false THEN '‚úÖ RLS Desabilitado'
    ELSE '‚ùå RLS Ainda Ativo'
  END as status
FROM pg_tables 
WHERE tablename IN ('users', 'vagas', 'backup_logs')
ORDER BY tablename;

-- 5. Verificar se n√£o h√° pol√≠ticas restantes
SELECT 
  'remaining_policies' as info,
  COUNT(*) as policy_count
FROM pg_policies 
WHERE tablename IN ('users', 'vagas', 'backup_logs');

-- ========================================
-- INSTRU√á√ïES P√ìS-ROLLBACK
-- ========================================

/*
AP√ìS EXECUTAR ESTE ROLLBACK:

‚úÖ O QUE FUNCIONA:
- Login deve funcionar normalmente
- Todas as opera√ß√µes de banco devem funcionar
- N√£o haver√° erros de "infinite recursion"

‚ùå O QUE PERDE:
- Seguran√ßa de dados (qualquer usu√°rio autenticado pode acessar tudo)
- Controle de acesso baseado em roles
- Prote√ß√£o contra acesso n√£o autorizado

üîÑ PR√ìXIMOS PASSOS:
1. Teste o login para confirmar que funciona
2. Se funcionar, voc√™ pode:
   - Deixar assim (menos seguro, mas funcional)
   - Tentar implementar as pol√≠ticas novamente com ajustes
   - Implementar seguran√ßa apenas no frontend

‚ö†Ô∏è ATEN√á√ÉO:
Este rollback remove TODA a seguran√ßa RLS. Use apenas se necess√°rio.
*/
