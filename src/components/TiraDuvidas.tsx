import { useState, useEffect, useMemo } from 'react'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card'
import { Button } from './ui/button'
import { Input } from './ui/input'
import { Badge } from './ui/badge'
import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs'
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from './ui/accordion'
import { useThemeClasses } from '../hooks/useThemeClasses'
import { 
  Search, 
  BookOpen, 
  HelpCircle, 
  FileText, 
  MessageCircle, 
  ChevronRight,
  Filter,
  X,
  Lightbulb,
  Settings,
  Users,
  BarChart3,
  Plus,
  Mail,
  AlertTriangle,
  CheckCircle,
  Info,
  ExternalLink,
  Copy
} from 'lucide-react'
// import { toast } from 'sonner' // Removido para evitar depend√™ncia extra

interface HelpContent {
  id: string
  title: string
  content: string
  category: string
  type: 'manual' | 'faq'
  tags: string[]
  priority: 'high' | 'medium' | 'low'
  icon: string
}

interface SearchResult {
  content: HelpContent
  relevance: number
  matchedText: string[]
}

export default function TiraDuvidas() {
  const [searchTerm, setSearchTerm] = useState('')
  const [selectedCategory, setSelectedCategory] = useState('all')
  const [selectedType, setSelectedType] = useState<'all' | 'manual' | 'faq'>('all')
  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set())
  const { textClasses } = useThemeClasses()

  // Base de conhecimento estruturada
  const helpContent: HelpContent[] = [
    // Manual - Autentica√ß√£o
    {
      id: 'auth-login',
      title: 'Como fazer login no sistema',
      content: '1. Acesse a URL da aplica√ß√£o no seu navegador\n2. Insira seu email e senha\n3. Clique em "Entrar"\n4. Aguarde a valida√ß√£o das credenciais\n5. Voc√™ ser√° redirecionado automaticamente para o dashboard',
      category: 'autenticacao',
      type: 'manual',
      tags: ['login', 'acesso', 'entrada', 'credenciais'],
      priority: 'high',
      icon: 'üîê'
    },
    {
      id: 'auth-recovery',
      title: 'Recupera√ß√£o de senha',
      content: '1. Na p√°gina de login, clique em "Esqueci minha senha"\n2. Insira seu email cadastrado\n3. Clique em "Enviar link de recupera√ß√£o"\n4. Verifique sua caixa de email\n5. Clique no link recebido\n6. Defina uma nova senha',
      category: 'autenticacao',
      type: 'manual',
      tags: ['senha', 'recupera√ß√£o', 'esqueci', 'reset'],
      priority: 'high',
      icon: 'üîë'
    },
    
    // Manual - Gest√£o de Vagas
    {
      id: 'vagas-criar',
      title: 'Criar uma nova vaga',
      content: '1. Acesse "Nova Vaga" no menu lateral\n2. Preencha todas as informa√ß√µes obrigat√≥rias (Site, Categoria, Cargo, Cliente, Descri√ß√£o)\n3. Use o sistema de scraping para extrair dados de URLs\n4. Revise as informa√ß√µes extra√≠das\n5. Clique em "Criar Oportunidade"',
      category: 'vagas',
      type: 'manual',
      tags: ['criar', 'vaga', 'nova', 'oportunidade', 'formul√°rio'],
      priority: 'high',
      icon: '‚ûï'
    },
    {
      id: 'vagas-editar',
      title: 'Editar uma vaga existente',
      content: '1. Na lista de vagas, clique no √≠cone "Editar" (‚úèÔ∏è)\n2. Modifique os campos desejados\n3. Clique em "Salvar altera√ß√µes"\n4. Confirme a opera√ß√£o\n\nO sistema mant√©m um hist√≥rico de todas as altera√ß√µes realizadas.',
      category: 'vagas',
      type: 'manual',
      tags: ['editar', 'modificar', 'alterar', 'atualizar'],
      priority: 'high',
      icon: '‚úèÔ∏è'
    },
    {
      id: 'vagas-buscar',
      title: 'Buscar vagas espec√≠ficas',
      content: 'Use o campo de busca na p√°gina de oportunidades para procurar por:\n‚Ä¢ Cliente\n‚Ä¢ Cargo\n‚Ä¢ Site\n‚Ä¢ C√©lula\n‚Ä¢ T√≠tulo\n\nUse filtros avan√ßados para refinar os resultados.',
      category: 'vagas',
      type: 'manual',
      tags: ['buscar', 'procurar', 'filtrar', 'pesquisar'],
      priority: 'medium',
      icon: 'üîç'
    },
    {
      id: 'vagas-scraping',
      title: 'Sistema de scraping autom√°tico',
      content: 'O sistema pode extrair automaticamente informa√ß√µes de vagas:\n1. Cole a URL da vaga no campo apropriado\n2. Clique em "Extrair Informa√ß√µes"\n3. Revise e ajuste as informa√ß√µes extra√≠das\n4. Salve a vaga\n\nFunciona com a maioria dos sites de vagas.',
      category: 'vagas',
      type: 'manual',
      tags: ['scraping', 'extrair', 'url', 'autom√°tico'],
      priority: 'medium',
      icon: 'ü§ñ'
    },

    // Manual - Comparativo
    {
      id: 'comparativo-usar',
      title: 'Como usar o comparativo de clientes',
      content: '1. Acesse "Comparativo" no menu lateral\n2. Selecione at√© 3 clientes para compara√ß√£o\n3. Aplique filtros conforme necess√°rio (C√©lula ‚Üí Cargo ‚Üí Site ‚Üí Categoria)\n4. Visualize a compara√ß√£o lado a lado\n5. Expanda detalhes clicando nas se√ß√µes',
      category: 'comparativo',
      type: 'manual',
      tags: ['comparar', 'clientes', 'filtros', 'an√°lise'],
      priority: 'high',
      icon: 'üìä'
    },
    {
      id: 'comparativo-filtros',
      title: 'Filtros no comparativo',
      content: 'Os filtros s√£o condicionais e funcionam em cascata:\n‚Ä¢ C√©lula: Filtro principal que afeta outros filtros\n‚Ä¢ Cargo: Depende da c√©lula selecionada\n‚Ä¢ Site: Depende de c√©lula e cargo\n‚Ä¢ Categoria: Depende dos filtros anteriores\n\nUse "Limpar Filtros" para resetar.',
      category: 'comparativo',
      type: 'manual',
      tags: ['filtros', 'condicionais', 'cascata', 'limpar'],
      priority: 'medium',
      icon: 'üîß'
    },

    // FAQ - Problemas T√©cnicos
    {
      id: 'faq-lento',
      title: 'A aplica√ß√£o est√° lenta. O que fazer?',
      content: '‚Ä¢ Verifique sua conex√£o com a internet\n‚Ä¢ Limpe o cache do navegador\n‚Ä¢ Feche outras abas desnecess√°rias\n‚Ä¢ Entre em contato com o administrador se o problema persistir\n\nO sistema √© otimizado para at√© 10.000 vagas.',
      category: 'problemas',
      type: 'faq',
      tags: ['lento', 'performance', 'cache', 'internet'],
      priority: 'high',
      icon: '‚ö°'
    },
    {
      id: 'faq-acesso',
      title: 'N√£o consigo acessar o sistema',
      content: 'Verifique:\n‚Ä¢ Se voc√™ est√° online\n‚Ä¢ Se a URL est√° correta\n‚Ä¢ Se n√£o h√° problemas de cache\n‚Ä¢ Tente em outro navegador\n‚Ä¢ Verifique se o sistema n√£o est√° em manuten√ß√£o\n\nEntre em contato com o administrador se necess√°rio.',
      category: 'problemas',
      type: 'faq',
      tags: ['acesso', 'login', 'erro', 'navegador'],
      priority: 'high',
      icon: 'üö´'
    },
    {
      id: 'faq-email',
      title: 'N√£o recebi o email de recupera√ß√£o de senha',
      content: '‚Ä¢ Verifique sua caixa de spam/lixo eletr√¥nico\n‚Ä¢ Aguarde alguns minutos (pode demorar at√© 5 minutos)\n‚Ä¢ Tente novamente ap√≥s alguns minutos\n‚Ä¢ Entre em contato com o administrador do sistema\n\nO sistema usa Resend API para envio de emails.',
      category: 'problemas',
      type: 'faq',
      tags: ['email', 'recupera√ß√£o', 'spam', 'demora'],
      priority: 'high',
      icon: 'üìß'
    },

    // FAQ - Permiss√µes
    {
      id: 'faq-permissoes',
      title: 'Qual a diferen√ßa entre usu√°rio ADMIN e RH?',
      content: 'ADMIN:\n‚Ä¢ Acesso total ao sistema\n‚Ä¢ Gest√£o de usu√°rios\n‚Ä¢ Configura√ß√µes do sistema\n‚Ä¢ Backup e exporta√ß√£o\n‚Ä¢ Exclus√£o de vagas\n\nRH:\n‚Ä¢ Visualiza√ß√£o de vagas\n‚Ä¢ Cria√ß√£o e edi√ß√£o de vagas (baseado em configura√ß√£o)\n‚Ä¢ Comparativo de clientes\n‚Ä¢ Exporta√ß√£o de dados',
      category: 'permiss√µes',
      type: 'faq',
      tags: ['admin', 'rh', 'permiss√µes', 'acesso', 'diferen√ßa'],
      priority: 'high',
      icon: 'üë•'
    },
    {
      id: 'faq-limites',
      title: 'H√° limites no sistema?',
      content: 'Limites conhecidos:\n‚Ä¢ Comparativo: m√°ximo 3 clientes simult√¢neos\n‚Ä¢ Vagas por p√°gina: 10, 25 ou 50\n‚Ä¢ Sess√£o: expira ap√≥s 24 horas de inatividade\n‚Ä¢ Sistema otimizado para at√© 10.000 vagas\n\nN√£o h√° limite espec√≠fico para cria√ß√£o de vagas.',
      category: 'permiss√µes',
      type: 'faq',
      tags: ['limites', 'restri√ß√µes', 'm√°ximo', 'sess√£o'],
      priority: 'medium',
      icon: 'üìè'
    },

    // FAQ - Funcionalidades
    {
      id: 'faq-exportar',
      title: 'Como exportar dados?',
      content: 'Voc√™ pode exportar:\n‚Ä¢ Lista de vagas: Clique em "Exportar" na p√°gina de oportunidades\n‚Ä¢ Backup completo: Configura√ß√µes > Backup e Exporta√ß√£o (apenas ADMIN)\n‚Ä¢ Formatos: Excel (.xlsx), CSV, JSON\n\nADMINs podem fazer backup de todos os dados do sistema.',
      category: 'funcionalidades',
      type: 'faq',
      tags: ['exportar', 'backup', 'excel', 'dados'],
      priority: 'medium',
      icon: 'üì§'
    },
    {
      id: 'faq-mobile',
      title: 'O sistema funciona em dispositivos m√≥veis?',
      content: 'Sim! O sistema √© totalmente responsivo:\n‚Ä¢ Smartphones\n‚Ä¢ Tablets\n‚Ä¢ Desktops\n‚Ä¢ Laptops\n\nEm dispositivos m√≥veis, a barra lateral se transforma em menu hamb√∫rguer.',
      category: 'funcionalidades',
      type: 'faq',
      tags: ['mobile', 'responsivo', 'tablet', 'smartphone'],
      priority: 'medium',
      icon: 'üì±'
    },
    {
      id: 'faq-temas',
      title: 'Como alterar o tema da aplica√ß√£o?',
      content: 'Op√ß√µes:\n1. Configura√ß√µes > Temas e Interface (ADMIN)\n2. Bot√£o de tema na barra lateral\n\nTemas dispon√≠veis:\n‚Ä¢ Claro (padr√£o)\n‚Ä¢ Escuro\n‚Ä¢ Perfis de cor personalizados',
      category: 'funcionalidades',
      type: 'faq',
      tags: ['tema', 'claro', 'escuro', 'cores'],
      priority: 'low',
      icon: 'üé®'
    },

    // FAQ - Relat√≥rios
    {
      id: 'faq-relatorios',
      title: 'Como criar um relat√≥rio?',
      content: '1. Durante a compara√ß√£o de clientes, clique no √≠cone de alerta (‚ö†Ô∏è)\n2. Preencha o formul√°rio com:\n   ‚Ä¢ T√≠tulo do problema\n   ‚Ä¢ Descri√ß√£o detalhada\n   ‚Ä¢ Tipo de problema\n   ‚Ä¢ Prioridade\n3. Clique em "Enviar Reporte"\n\nAcompanhe o status em "Relat√≥rios" no menu.',
      category: 'relat√≥rios',
      type: 'faq',
      tags: ['relat√≥rio', 'reporte', 'problema', 'bug'],
      priority: 'medium',
      icon: 'üìã'
    },

    // Manual - Configura√ß√µes (ADMIN)
    {
      id: 'admin-backup',
      title: 'Como fazer backup dos dados (ADMIN)',
      content: '1. Acesse "Configura√ß√µes" > "Backup e Exporta√ß√£o"\n2. Configure quais dados incluir:\n   ‚Ä¢ Vagas (padr√£o)\n   ‚Ä¢ Usu√°rios (opcional)\n   ‚Ä¢ Logs de backup (opcional)\n   ‚Ä¢ Not√≠cias (opcional)\n3. Escolha o formato (Excel, CSV, JSON)\n4. Clique em "Criar Backup"\n5. Baixe o arquivo gerado',
      category: 'admin',
      type: 'manual',
      tags: ['backup', 'exportar', 'dados', 'admin', 'configura√ß√µes'],
      priority: 'high',
      icon: 'üíæ'
    },
    {
      id: 'admin-usuarios',
      title: 'Gerenciar usu√°rios (ADMIN)',
      content: '1. Acesse "Usu√°rios" no menu lateral\n2. Clique em "Adicionar Usu√°rio" para criar novos\n3. Use os √≠cones de edi√ß√£o para modificar usu√°rios existentes\n4. Configure roles (ADMIN/RH)\n5. Gerencie permiss√µes espec√≠ficas\n\nApenas ADMINs podem gerenciar usu√°rios.',
      category: 'admin',
      type: 'manual',
      tags: ['usu√°rios', 'gerenciar', 'criar', 'editar', 'roles'],
      priority: 'high',
      icon: 'üë§'
    },
    {
      id: 'admin-noticias',
      title: 'Criar not√≠cias internas (ADMIN)',
      content: '1. Acesse "Configura√ß√µes" > "Sistema de Not√≠cias"\n2. Clique em "Criar Not√≠cia"\n3. Preencha:\n   ‚Ä¢ T√≠tulo\n   ‚Ä¢ Conte√∫do\n   ‚Ä¢ Tipo (Info, Warning, Success)\n4. Ative/desative conforme necess√°rio\n5. Salve a not√≠cia\n\nNot√≠cias aparecem no dashboard dos usu√°rios.',
      category: 'admin',
      type: 'manual',
      tags: ['not√≠cias', 'comunicado', 'avisos', 'sistema'],
      priority: 'medium',
      icon: 'üì¢'
    }
  ]

  // Categorias dispon√≠veis
  const categories = [
    { id: 'all', label: 'Todas', icon: 'üìö' },
    { id: 'autenticacao', label: 'Autentica√ß√£o', icon: 'üîê' },
    { id: 'vagas', label: 'Gest√£o de Vagas', icon: 'üíº' },
    { id: 'comparativo', label: 'Comparativo', icon: 'üìä' },
    { id: 'problemas', label: 'Problemas T√©cnicos', icon: 'üîß' },
    { id: 'permiss√µes', label: 'Permiss√µes', icon: 'üë•' },
    { id: 'funcionalidades', label: 'Funcionalidades', icon: '‚öôÔ∏è' },
    { id: 'relat√≥rios', label: 'Relat√≥rios', icon: 'üìã' },
    { id: 'admin', label: 'Configura√ß√µes (ADMIN)', icon: 'üõ†Ô∏è' }
  ]

  // Fun√ß√£o de busca inteligente
  const searchResults = useMemo((): SearchResult[] => {
    if (!searchTerm.trim()) {
      return helpContent.map(content => ({ content, relevance: 1, matchedText: [] }))
    }

    const searchWords = searchTerm.toLowerCase().split(' ').filter(word => word.length > 2)
    
    return helpContent
      .map(content => {
        let relevance = 0
        const matchedText: string[] = []
        
        // Buscar no t√≠tulo (peso alto)
        searchWords.forEach(word => {
          if (content.title.toLowerCase().includes(word)) {
            relevance += 10
            matchedText.push(content.title)
          }
        })
        
        // Buscar no conte√∫do (peso m√©dio)
        searchWords.forEach(word => {
          if (content.content.toLowerCase().includes(word)) {
            relevance += 5
            matchedText.push(content.content.substring(0, 100) + '...')
          }
        })
        
        // Buscar nas tags (peso baixo)
        searchWords.forEach(word => {
          if (content.tags.some(tag => tag.toLowerCase().includes(word))) {
            relevance += 2
            matchedText.push(`Tag: ${word}`)
          }
        })
        
        return { content, relevance, matchedText }
      })
      .filter(result => result.relevance > 0)
      .sort((a, b) => b.relevance - a.relevance)
  }, [searchTerm])

  // Filtrar por categoria e tipo
  const filteredResults = useMemo(() => {
    return searchResults.filter(result => {
      const categoryMatch = selectedCategory === 'all' || result.content.category === selectedCategory
      const typeMatch = selectedType === 'all' || result.content.type === selectedType
      return categoryMatch && typeMatch
    })
  }, [searchResults, selectedCategory, selectedType])

  const toggleExpanded = (id: string) => {
    const newExpanded = new Set(expandedItems)
    if (newExpanded.has(id)) {
      newExpanded.delete(id)
    } else {
      newExpanded.add(id)
    }
    setExpandedItems(newExpanded)
  }

  const copyToClipboard = (text: string) => {
    navigator.clipboard.writeText(text)
    // Feedback visual simples sem depend√™ncia externa
    alert('Conte√∫do copiado para a √°rea de transfer√™ncia!')
  }

  const getPriorityColor = (priority: string) => {
    switch (priority) {
      case 'high': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
      case 'medium': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
      case 'low': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200'
      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'
    }
  }

  const getPriorityLabel = (priority: string) => {
    switch (priority) {
      case 'high': return 'Alta'
      case 'medium': return 'M√©dia'
      case 'low': return 'Baixa'
      default: return 'Normal'
    }
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold flex items-center gap-3">
            <HelpCircle className="h-8 w-8 text-blue-600" />
            Tira D√∫vidas
          </h1>
          <p className="text-gray-600 dark:text-gray-400 mt-2">
            Encontre respostas r√°pidas para suas d√∫vidas sobre o sistema
          </p>
        </div>
        <div className="flex items-center gap-2 text-sm text-gray-500">
          <BookOpen className="h-4 w-4" />
          <span>{helpContent.length} t√≥picos dispon√≠veis</span>
        </div>
      </div>

      {/* Barra de Pesquisa */}
      <Card>
        <CardContent className="pt-6">
          <div className="space-y-4">
            <div className="relative">
              <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
              <Input
                placeholder="Busque por qualquer termo: login, criar vaga, backup, problemas..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                className="pl-10 pr-4"
              />
              {searchTerm && (
                <Button
                  variant="ghost"
                  size="sm"
                  className="absolute right-2 top-1/2 transform -translate-y-1/2 h-6 w-6 p-0"
                  onClick={() => setSearchTerm('')}
                >
                  <X className="h-3 w-3" />
                </Button>
              )}
            </div>

            {/* Filtros */}
            <div className="flex flex-wrap gap-4">
              <div className="flex items-center gap-2">
                <Filter className="h-4 w-4 text-gray-500" />
                <span className="text-sm font-medium">Filtros:</span>
              </div>
              
              <Tabs value={selectedCategory} onValueChange={setSelectedCategory}>
                <TabsList className="grid w-full grid-cols-3 lg:grid-cols-5">
                  <TabsTrigger value="all">Todas</TabsTrigger>
                  <TabsTrigger value="autenticacao">Autentica√ß√£o</TabsTrigger>
                  <TabsTrigger value="vagas">Vagas</TabsTrigger>
                  <TabsTrigger value="comparativo">Comparativo</TabsTrigger>
                  <TabsTrigger value="problemas">Problemas</TabsTrigger>
                </TabsList>
              </Tabs>

              <div className="flex items-center gap-2">
                <span className="text-sm text-gray-500">Tipo:</span>
                <div className="flex gap-1">
                  <Button
                    variant={selectedType === 'all' ? 'default' : 'outline'}
                    size="sm"
                    onClick={() => setSelectedType('all')}
                  >
                    Todos
                  </Button>
                  <Button
                    variant={selectedType === 'manual' ? 'default' : 'outline'}
                    size="sm"
                    onClick={() => setSelectedType('manual')}
                  >
                    Manual
                  </Button>
                  <Button
                    variant={selectedType === 'faq' ? 'default' : 'outline'}
                    size="sm"
                    onClick={() => setSelectedType('faq')}
                  >
                    FAQ
                  </Button>
                </div>
              </div>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Resultados */}
      <div className="space-y-4">
        {searchTerm && (
          <div className="text-sm text-gray-600 dark:text-gray-400">
            {filteredResults.length} resultado(s) encontrado(s) para "{searchTerm}"
          </div>
        )}

        {filteredResults.length === 0 ? (
          <Card>
            <CardContent className="py-12 text-center">
              <Search className="h-12 w-12 text-gray-400 mx-auto mb-4" />
              <h3 className="text-lg font-medium text-gray-900 dark:text-gray-100 mb-2">
                Nenhum resultado encontrado
              </h3>
              <p className="text-gray-600 dark:text-gray-400">
                Tente usar termos diferentes ou verifique os filtros aplicados
              </p>
            </CardContent>
          </Card>
        ) : (
          <div className="grid gap-4">
            {filteredResults.map((result) => (
              <Card key={result.content.id} className="hover:shadow-md transition-shadow">
                <CardHeader 
                  className="cursor-pointer"
                  onClick={() => toggleExpanded(result.content.id)}
                >
                  <div className="flex items-start justify-between">
                    <div className="flex items-start gap-3">
                      <span className="text-2xl">{result.content.icon}</span>
                      <div className="flex-1">
                        <CardTitle className="text-lg flex items-center gap-2">
                          {result.content.title}
                          {result.content.type === 'faq' && (
                            <Badge variant="secondary" className="text-xs">
                              FAQ
                            </Badge>
                          )}
                          {result.content.type === 'manual' && (
                            <Badge variant="outline" className="text-xs">
                              Manual
                            </Badge>
                          )}
                        </CardTitle>
                        <CardDescription className="mt-1">
                          {categories.find(cat => cat.id === result.content.category)?.label}
                        </CardDescription>
                      </div>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge className={getPriorityColor(result.content.priority)}>
                        {getPriorityLabel(result.content.priority)}
                      </Badge>
                      <ChevronRight 
                        className={`h-4 w-4 text-gray-400 transition-transform ${
                          expandedItems.has(result.content.id) ? 'rotate-90' : ''
                        }`} 
                      />
                    </div>
                  </div>
                </CardHeader>
                
                {expandedItems.has(result.content.id) && (
                  <CardContent>
                    <div className="space-y-4">
                      <div className="prose prose-sm max-w-none dark:prose-invert">
                        <pre className="whitespace-pre-wrap font-sans text-sm leading-relaxed">
                          {result.content.content}
                        </pre>
                      </div>
                      
                      {result.content.tags.length > 0 && (
                        <div className="flex flex-wrap gap-1">
                          {result.content.tags.map((tag, index) => (
                            <Badge key={index} variant="outline" className="text-xs">
                              {tag}
                            </Badge>
                          ))}
                        </div>
                      )}
                      
                      <div className="flex items-center justify-between pt-2 border-t">
                        <div className="flex items-center gap-2 text-sm text-gray-500">
                          <ExternalLink className="h-3 w-3" />
                          <span>√ötil para: {result.content.tags.slice(0, 3).join(', ')}</span>
                        </div>
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => copyToClipboard(result.content.content)}
                        >
                          <Copy className="h-3 w-3 mr-1" />
                          Copiar
                        </Button>
                      </div>
                    </div>
                  </CardContent>
                )}
              </Card>
            ))}
          </div>
        )}
      </div>

      {/* Dicas R√°pidas */}
      {!searchTerm && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Lightbulb className="h-5 w-5 text-yellow-500" />
              Dicas R√°pidas
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              <div className="flex items-start gap-3 p-3 rounded-lg bg-blue-50 dark:bg-blue-900/20">
                <Search className="h-5 w-5 text-blue-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-blue-900 dark:text-blue-100">Busca Inteligente</h4>
                  <p className="text-sm text-blue-700 dark:text-blue-300">
                    Digite qualquer termo para encontrar respostas r√°pidas
                  </p>
                </div>
              </div>
              
              <div className="flex items-start gap-3 p-3 rounded-lg bg-green-50 dark:bg-green-900/20">
                <Copy className="h-5 w-5 text-green-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-green-900 dark:text-green-100">Copiar Respostas</h4>
                  <p className="text-sm text-green-700 dark:text-green-300">
                    Use o bot√£o "Copiar" para salvar instru√ß√µes
                  </p>
                </div>
              </div>
              
              <div className="flex items-start gap-3 p-3 rounded-lg bg-purple-50 dark:bg-purple-900/20">
                <Filter className="h-5 w-5 text-purple-600 mt-0.5" />
                <div>
                  <h4 className="font-medium text-purple-900 dark:text-purple-100">Filtros Espec√≠ficos</h4>
                  <p className="text-sm text-purple-700 dark:text-purple-300">
                    Use os filtros para encontrar t√≥picos espec√≠ficos
                  </p>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  )
}
