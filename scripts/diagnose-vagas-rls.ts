// Script simplificado para corrigir pol√≠ticas RLS
import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://mywaoaofatgwbbtyqfpd.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im15d2FvYW9mYXRnd2JidHlxZnBkIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc1ODYwMDMyNCwiZXhwIjoyMDc0MTc2MzI0fQ.oUhs-CNusuqxKFIwjc1zv0Nh4TJ6opnmzt8_V1Lfq7U'

async function fixVagasRLSSimple() {
  console.log('üîß Corrigindo Pol√≠ticas RLS da Tabela Vagas (M√©todo Simples)')
  console.log('=' .repeat(70))

  const supabase = createClient(supabaseUrl, supabaseServiceKey)

  try {
    // 1. Testar opera√ß√µes atuais
    console.log('\nüß™ 1. Testando opera√ß√µes atuais...')
    
    // Testar select
    const { data: selectData, error: selectError } = await supabase
      .from('vagas')
      .select('id')
      .limit(1)
    
    if (selectError) {
      console.log(`‚ùå Erro no select: ${selectError.message}`)
    } else {
      console.log('‚úÖ SELECT funcionando')
    }

    // Testar insert (deve falhar)
    const { data: insertData, error: insertError } = await supabase
      .from('vagas')
      .insert({
        site: 'TESTE',
        categoria: 'TESTE',
        cargo: 'TESTE',
        cliente: 'TESTE',
        celula: 'TESTE'
      })
    
    if (insertError) {
      console.log(`‚úÖ INSERT protegido: ${insertError.message}`)
    } else {
      console.log('‚ö†Ô∏è INSERT n√£o est√° protegido')
    }

    // Testar update (deve falhar)
    const { data: updateData, error: updateError } = await supabase
      .from('vagas')
      .update({ updated_at: new Date().toISOString() })
      .eq('id', '00000000-0000-0000-0000-000000000000')
    
    if (updateError) {
      console.log(`‚úÖ UPDATE protegido: ${updateError.message}`)
    } else {
      console.log('‚ö†Ô∏è UPDATE n√£o est√° protegido')
    }

    // Testar delete (deve falhar)
    const { data: deleteData, error: deleteError } = await supabase
      .from('vagas')
      .delete()
      .eq('id', '00000000-0000-0000-0000-000000000000')
    
    if (deleteError) {
      console.log(`‚úÖ DELETE protegido: ${deleteError.message}`)
    } else {
      console.log('‚ö†Ô∏è DELETE n√£o est√° protegido')
    }

    // 2. Verificar se h√° problemas espec√≠ficos
    console.log('\nüîç 2. Verificando problemas espec√≠ficos...')
    
    // Verificar se h√° dados na tabela
    const { data: countData, error: countError } = await supabase
      .from('vagas')
      .select('*', { count: 'exact', head: true })
    
    if (countError) {
      console.log(`‚ùå Erro ao contar vagas: ${countError.message}`)
    } else {
      console.log(`‚úÖ Total de vagas: ${countData?.length || 0}`)
    }

    // 3. Testar com diferentes filtros
    console.log('\nüîç 3. Testando diferentes filtros...')
    
    // Testar filtro por site
    const { data: siteData, error: siteError } = await supabase
      .from('vagas')
      .select('id, site')
      .eq('site', 'S√ÉO BENTO')
      .limit(3)
    
    if (siteError) {
      console.log(`‚ùå Erro no filtro por site: ${siteError.message}`)
    } else {
      console.log(`‚úÖ Filtro por site funcionando: ${siteData?.length || 0} registros`)
    }

    // Testar filtro por cliente
    const { data: clientData, error: clientError } = await supabase
      .from('vagas')
      .select('id, cliente')
      .eq('cliente', 'VIVO')
      .limit(3)
    
    if (clientError) {
      console.log(`‚ùå Erro no filtro por cliente: ${clientError.message}`)
    } else {
      console.log(`‚úÖ Filtro por cliente funcionando: ${clientData?.length || 0} registros`)
    }

    // 4. Verificar configura√ß√£o atual
    console.log('\n‚öôÔ∏è 4. Verificando configura√ß√£o atual...')
    console.log(`üì° URL: ${supabaseUrl}`)
    console.log(`üîë Service Key: ${supabaseServiceKey.substring(0, 20)}...`)

    // 5. Resumo do status
    console.log('\nüìä 5. Resumo do Status:')
    console.log(`   - SELECT: ${selectError ? '‚ùå' : '‚úÖ'}`)
    console.log(`   - INSERT: ${insertError ? '‚úÖ Protegido' : '‚ö†Ô∏è N√£o protegido'}`)
    console.log(`   - UPDATE: ${updateError ? '‚úÖ Protegido' : '‚ö†Ô∏è N√£o protegido'}`)
    console.log(`   - DELETE: ${deleteError ? '‚úÖ Protegido' : '‚ö†Ô∏è N√£o protegido'}`)

    if (!updateError || !deleteError) {
      console.log('\n‚ö†Ô∏è ATEN√á√ÉO: UPDATE e/ou DELETE n√£o est√£o protegidos por RLS!')
      console.log('   Isso pode ser um problema de seguran√ßa.')
      console.log('   Recomenda√ß√£o: Verificar pol√≠ticas RLS no Supabase Dashboard.')
    } else {
      console.log('\n‚úÖ Todas as opera√ß√µes est√£o protegidas corretamente!')
    }

    console.log('\n‚úÖ Diagn√≥stico conclu√≠do!')

  } catch (error) {
    console.error('‚ùå Erro durante diagn√≥stico:', error)
  }
}

// Executar diagn√≥stico
fixVagasRLSSimple()
